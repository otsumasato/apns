name: apns-pinger
on:
  schedule:
    - cron: "*/10 * * * *"      # 10分おき
  workflow_dispatch: {}

concurrency:
  group: apns-pinger
  cancel-in-progress: true

jobs:
  send:
    runs-on: ubuntu-latest
    env:
      APNS_TEAM_ID:   ${{ secrets.APNS_TEAM_ID }}
      APNS_KEY_ID:    ${{ secrets.APNS_KEY_ID }}
      APNS_TOPIC:     ${{ secrets.APNS_TOPIC }}          # net.momo.CoreBluetoothLE
      DEVICE_TOKENS:  ${{ secrets.DEVICE_TOKENS }}       # カンマ区切り可
      APN_SECRETS:    ${{ secrets.APN_SECRETS }}         # -----BEGIN PRIVATE KEY----- ... END ...
      APNS_ENV:       sandbox                            # TestFlight/本番は prod
    steps:
      - name: Install deps
        run: |
          pip install "PyJWT>=2.8" "cryptography>=42"

      - name: Write key
        run: |
          cat > apns_key.p8 <<'PEM'
          ${APN_SECRETS}
          PEM
          openssl pkey -in apns_key.p8 -noout >/dev/null || { echo "Could not read key"; exit 1; }

      - name: Build JWT
        id: jwt
        run: |
          python - <<'PY' | tee jwt.txt
          import time, jwt
          from cryptography.hazmat.primitives import serialization
          TEAM_ID="${APNS_TEAM_ID}"
          KEY_ID="${APNS_KEY_ID}"
          with open("apns_key.p8","rb") as f:
              key = serialization.load_pem_private_key(f.read(), password=None)
          print(jwt.encode({"iss": TEAM_ID, "iat": int(time.time())},
                           key, algorithm="ES256", headers={"kid": KEY_ID}))
          PY

      - name: Send APNs (background)
        run: |
          set -euo pipefail
          JWT=$(cat jwt.txt)
          HOST=$([ "${APNS_ENV}" = "prod" ] && echo "https://api.push.apple.com" || echo "https://api.sandbox.push.apple.com")
          # 0〜90秒ランダムジッター（同時刻集中を避ける）
          SLEEP=$((RANDOM % 91)); echo "jitter ${SLEEP}s"; sleep "${SLEEP}"
          EXPIRES=$(( $(date +%s) + 900 ))   # 15分で期限切れ
          TRACE=$(uuidgen)
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          IFS=, read -ra TOKENS <<< "${DEVICE_TOKENS}"
          for T in "${TOKENS[@]}"; do
            echo "=== send trace=$TRACE token=${T:0:8}... ==="
            RESP=$(curl --http2 -sS -w "\n%{http_code}" \
              -H "authorization: bearer ${JWT}" \
              -H "apns-topic: ${APNS_TOPIC}" \
              -H "apns-push-type: background" \
              -H "apns-priority: 5" \
              -H "apns-expiration: ${EXPIRES}" \
              -H "apns-id: ${TRACE}" \
              -d "{\"aps\":{\"content-available\":1},\"trace\":\"${TRACE}\",\"sent\":\"${NOW}\"}" \
              "${HOST}/3/device/${T}" || true)
            CODE=$(echo "$RESP" | tail -n1); BODY=$(echo "$RESP" | sed '$d')
            echo "HTTP=$CODE BODY=$BODY"
            [ "$CODE" = "200" ] || [ "$CODE" = "204" ] || exit 1
          done
