name: apns-every-5min
on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}
jobs:
  send:
    runs-on: ubuntu-latest
    env:
      TEAM_ID:   ${{ secrets.APNS_TEAM_ID }}
      KEY_ID:    ${{ secrets.APNS_KEY_ID }}
      TOPIC:     ${{ secrets.APNS_TOPIC }}
      TOKEN:     ${{ secrets.DEVICE_TOKENS }}
      HOST:      https://api.sandbox.push.apple.com
    steps:
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install deps
        run: |
          set -euo pipefail
          python -V
          pip install "PyJWT>=2.8" "cryptography>=42"

      - name: Write APNs key from multiline secret
        shell: bash
        run: |
          set -euo pipefail
          umask 077
          # ★ 複数行Secretを“そのまま”ファイル化（インデントしない・終端PEMは左端）
          cat > apns_key.p8 <<'PEM'${{ secrets.APN_SECRETS }}PEM
                    sed -i 's/\r$//' apns_key.p8
          # 形式チェック（エラーならここで落とす）
          openssl pkey -in apns_key.p8 -noout > /dev/null

      - name: Build JWT & send via curl (HTTP/2)
        shell: bash
        run: |
          set -euo pipefail
          JWT=$(python - <<'PY'
          import time, jwt
          from cryptography.hazmat.primitives import serialization
          with open("apns_key.p8", "rb") as f:
              priv = serialization.load_pem_private_key(f.read(), password=None)
          token = jwt.encode({"iss":"${{ env.TEAM_ID }}","iat":int(time.time())},
                             priv, algorithm="ES256", headers={"kid":"${{ env.KEY_ID }}"})
          print(token)
          PY
          )
          echo "Built JWT length=${#JWT}"

          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          RESP=$(curl --http2 -sS -w "\n%{http_code}" \
            -H "authorization: bearer ${JWT}" \
            -H "apns-topic: ${TOPIC}" \
            -H "apns-push-type: background" \
            -H "apns-priority: 5" \
            -d "{\"aps\":{\"content-available\":1},\"timestamp\":\"${TIMESTAMP}\"}" \
            "${HOST}/3/device/${TOKEN}")
          CODE=$(echo "$RESP" | tail -n1)
          BODY=$(echo "$RESP" | sed '$d')
          echo "=== HTTP $CODE ==="; echo "$BODY"
          if [ "$CODE" = "200" ] || [ "$CODE" = "204" ]; then
            echo "✅ sent"
          else
            echo "❌ failed ($CODE)"; exit 1
          fi
