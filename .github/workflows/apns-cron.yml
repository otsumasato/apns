name: one-time-apns
on:
  workflow_dispatch: {}

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install JWT deps
        run: |
          python -V
          pip install "PyJWT>=2.8" "cryptography>=42"

      - name: Build JWT (dedent PEM)
        id: jwt
        shell: python
        run: |
          import time, os, jwt, textwrap
          from cryptography.hazmat.primitives import serialization
          TEAM_ID = "8KVP2QK7BX"
          KEY_ID  = "5W5TK89GQC"
          P8_PEM = textwrap.dedent("""\
          -----BEGIN PRIVATE KEY-----
          MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgfUyrzATs1Sjn4u9w
          YeJH3LGx67sZPBoVJxHW3C7+dDWgCgYIKoZIzj0DAQehRANCAAQ+sq5rw5HiL6Jo
          LsGWWVfDqTmnYR9LqkKWG3ea+7flLPbRo6UKyuRyQXZ/wrRmVMR+Q5IkrPt4ogIt
          Mig6kHa4
          -----END PRIVATE KEY-----""").strip()

          priv = serialization.load_pem_private_key(P8_PEM.encode("utf-8"), password=None)
          token = jwt.encode({"iss": TEAM_ID, "iat": int(time.time())},
                             priv, algorithm="ES256", headers={"kid": KEY_ID})

          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"jwt={token}\n")

      - name: Send APNs via curl (HTTP/2)
        shell: bash
        env:
          JWT: ${{ steps.jwt.outputs.jwt }}
        run: |
          set -euo pipefail
          echo "curl version (HTTP2 必須) ↓"
          curl -V

          TOKEN="175946c5bde824e9d31e04660c640915323fa5cfcc15b316c5f1c8c026d1af80"
          TOPIC="net.momo.CoreBluetoothLE"
          HOST="https://api.sandbox.push.apple.com"

          CODE=$(curl --http2 -sS -o /tmp/body.json -w "%{http_code}" \
            -H "authorization: bearer ${JWT}" \
            -H "apns-topic: ${TOPIC}" \
            -H "apns-push-type: background" \
            -H "apns-priority: 5" \
            -d '{"aps":{"content-available":1}}' \
            "${HOST}/3/device/${TOKEN}")

          echo "=== HTTP Status Code ==="; echo "$CODE"
          echo "=== Response Body ===";   cat /tmp/body.json || true

          if [ "$CODE" = "200" ] || [ "$CODE" = "204" ]; then
            echo "✅ Silent push sent successfully!"
          else
            echo "❌ Failed to send push. Status: $CODE"
            exit 1
          fi
