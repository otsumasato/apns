name: apns-cron
on:
  workflow_dispatch:
    inputs:
      device_token:
        description: "Override device token (optional)"
        required: false
      env:
        description: "APNs environment"
        type: choice
        options: 
          - sandbox
          - production
        default: sandbox
  schedule:
    - cron: "*/5 * * * *"

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -V
          pip install "PyJWT>=2.8" "cryptography>=42"

      - name: Check secrets
        env:
          S_TEAM: ${{ secrets.APNS_TEAM_ID }}
          S_KEY: ${{ secrets.APNS_KEY_ID }}
          S_PEM: ${{ secrets.APN_SECRETS }}
          S_TOPIC: ${{ secrets.APNS_TOPIC }}
          S_DEVS: ${{ secrets.DEVICE_TOKENS }}
        run: |
          for v in S_TEAM S_KEY S_PEM S_TOPIC; do
            if [ -z "${!v}" ]; then 
              echo "❌ $v is EMPTY"
              exit 1
            else 
              echo "✅ $v is set"
            fi
          done

      - name: Build JWT
        id: jwt
        run: |
          python3 << 'EOF'
          import os
          import time
          import jwt
          from cryptography.hazmat.primitives import serialization
          
          TEAM_ID = "${{ secrets.APNS_TEAM_ID }}"
          KEY_ID = "${{ secrets.APNS_KEY_ID }}"
          PEM = """${{ secrets.APN_SECRETS }}"""
          
          priv = serialization.load_pem_private_key(PEM.encode(), None)
          token = jwt.encode(
              {"iss": TEAM_ID, "iat": int(time.time())},
              priv,
              algorithm="ES256",
              headers={"kid": KEY_ID}
          )
          print(f"::set-output name=token::{token}")
          EOF

      - name: Send APNs
        env:
          JWT: ${{ steps.jwt.outputs.token }}
          DEVICE_TOKEN: ${{ secrets.DEVICE_TOKENS }}
          TOPIC: ${{ secrets.APNS_TOPIC }}
        run: |
          TOKEN="${DEVICE_TOKEN%%,*}"
          HOST="https://api.sandbox.push.apple.com"
          
          RESPONSE=$(curl --http2 -sSf -w "\n%{http_code}" \
            -H "authorization: bearer ${JWT}" \
            -H "apns-topic: ${TOPIC}" \
            -H "apns-push-type: background" \
            -H "apns-priority: 5" \
            -d '{"aps":{"content-available":1}}' \
            "${HOST}/3/device/${TOKEN}")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          
          if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "204" ]; then
            echo "✅ Silent push sent successfully!"
          else
            echo "❌ Failed: HTTP $HTTP_CODE"
            exit 1
          fi
